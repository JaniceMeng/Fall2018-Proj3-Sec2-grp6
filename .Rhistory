AR<-c(extract_value_LR(i))
LR<-rbind(LR,AR)
#addblack_img<-addblack(imgHR)
#HR<-extract_value_HR(i)
}
LR
extract_value<-function(index){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", index), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", index), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
LR<-extract_value_LR(index)
addblack_img<-addblack(imgHR)
HR<-extract_value_HR(index)
return(list(data_index,LR,HR))
}
extract_value(1)
library(splitstackshape)
train_dir <- "/Users/sherrybaby/Documents/Github/Fall2018-Proj3-Sec2-grp6/data/train_set/" # This will be modified for different data sets.
LR_dir <- paste(train_dir, "LR/", sep="")
HR_dir <- paste(train_dir, "HR/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
set.seed(2018)
#setwd("/Users/sherrybaby/Documents/Github/Fall2018-Proj3-Sec2-grp6")
imgLR<-readImage("~/Desktop/5243project3/train_set/LR/img_0001.jpg")
imgHR<-readImage("~/Desktop/5243project3/train_set/HR/img_0001.jpg")
#addblack function
##add black around the original image
##input image
##output image with black around
addblack <- function(img) {
c1mat <- imageData(img)[, , 1]
c2mat <- imageData(img)[, , 2]
c3mat <- imageData(img)[, , 3]
c1matblack <- cbind(0, rbind(0, c1mat, 0), 0)
c2matblack <- cbind(0, rbind(0, c2mat, 0), 0)
c3matblack <- cbind(0, rbind(0, c3mat, 0), 0)
imgblack <- abind(c1matblack, c2matblack, c3matblack, along = 3)
return(imgblack)
}
#addblack(imgLR)
#addblack(imgHR)
###sample function
##input image
##output the index of image
sample_point<-function(imgLR,npoints=1000){
samp_row <- sample(1:nrow(imgLR), n_points, replace = TRUE)
samp_col <- sample(1:ncol(imgLR), n_points, replace=TRUE)
index<-data.frame(samp_row,samp_col)
index$freq1<-8
index$freq2<-4
return(index)
}
#sample_point(imgLR)
#sample_point(imgHR)
###index data
data_index<-sample_point(imgLR)
extract_eight<-function(samp_row,samp_col){
point1<-c(samp_row - 1, samp_col- 1)
point2<-c(samp_row - 1, samp_col)
point3<-c(samp_row -1, samp_col + 1)
point4<-c(samp_row, samp_col - 1)
point5<-c(samp_row, samp_col + 1)
point6<-c(samp_row+ 1, samp_col - 1)
point7<-c(samp_row + 1, samp_col)
point8<- c(samp_row + 1, samp_col+ 1)
return(list(rbind(point1,point2,point3,point4,point5,point6,point7,point8)))
}
##index of neighbor 8 points
neighbor_list<-mapply(extract_eight,data_index$samp_row, data_index$samp_col)
require(data.table)
df_neighbor <- data.frame(do.call(rbind,neighbor_list))
###extract value by index function
value_img_LR<-function(row,col){
value<-c()
value<- addblack_img[c(row)+1,c(col)+1,]
return(value)
}
library(splitstackshape)
###replicate the data of center point by freqency, frequecy 1=8, frequecy 2=4
center_data1<-expandRows(data_index, "freq1")
center_data2<-expandRows(data_index, "freq2")
###add black around the LR image
#addblack_img<-addblack(imgLR)
###value of neighbor 8 pixels
x1<-df_neighbor$X1
x2<-df_neighbor$X2
neighbor_value<-mapply(value_img_LR,x1,x2)
extract_value<-function(index){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", index), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", index), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
LR<-extract_value_LR(index)
addblack_img<-addblack(imgHR)
HR<-extract_value_HR(index)
return(list(data_index,LR,HR))
}
extract_value(1)
LR<-c()
for (i in 1:2){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
AR<-c(extract_value_LR(i))
LR<-rbind(LR,AR)
#addblack_img<-addblack(imgHR)
#HR<-extract_value_HR(i)
}
#addblack function
##add black around the original image
##input image
##output image with black around
addblack <- function(img) {
c1mat <- imageData(img)[, , 1]
c2mat <- imageData(img)[, , 2]
c3mat <- imageData(img)[, , 3]
c1matblack <- cbind(0, rbind(0, c1mat, 0), 0)
c2matblack <- cbind(0, rbind(0, c2mat, 0), 0)
c3matblack <- cbind(0, rbind(0, c3mat, 0), 0)
imgblack <- abind(c1matblack, c2matblack, c3matblack, along = 3)
return(imgblack)
}
#addblack(imgLR)
#addblack(imgHR)
###sample function
##input image
##output the index of image
sample_point<-function(imgLR,npoints=1000){
samp_row <- sample(1:nrow(imgLR), n_points, replace = TRUE)
samp_col <- sample(1:ncol(imgLR), n_points, replace=TRUE)
index<-data.frame(samp_row,samp_col)
index$freq1<-8
index$freq2<-4
return(index)
}
#sample_point(imgLR)
#sample_point(imgHR)
extract_eight<-function(samp_row,samp_col){
point1<-c(samp_row - 1, samp_col- 1)
point2<-c(samp_row - 1, samp_col)
point3<-c(samp_row -1, samp_col + 1)
point4<-c(samp_row, samp_col - 1)
point5<-c(samp_row, samp_col + 1)
point6<-c(samp_row+ 1, samp_col - 1)
point7<-c(samp_row + 1, samp_col)
point8<- c(samp_row + 1, samp_col+ 1)
return(list(rbind(point1,point2,point3,point4,point5,point6,point7,point8)))
}
###extract value by index function
value_img_LR<-function(row,col){
value<-c()
value<- addblack_img[c(row)+1,c(col)+1,]
return(value)
}
##extract 4 pixels index from HR
extract_four<-function(samp_row,samp_col){
point1<-c(2*samp_row - 1, 2*samp_col- 1)
point2<-c(2*samp_row, 2*samp_col-1)
point3<-c(2*samp_row -1, 2*samp_col)
point4<-c(2*samp_row, 2*samp_col)
return(list(rbind(point1,point2,point3,point4)))
}
###extract value from low resolution dataset
extract_value_LR<-function(image_index){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", image_index), ".jpg"))
###8 pixels
data_index<-sample_point(imgLR)
neighbor_list<-mapply(extract_eight,data_index$samp_row, data_index$samp_col)
df_neighbor <- data.frame(do.call(rbind,neighbor_list))
center_data1<-expandRows(data_index, "freq1")
#add black around the LR image
addblack_img<-addblack(imgLR)
#value of neighbor 8 pixels
x1<-df_neighbor$X1
x2<-df_neighbor$X2
neighbor_value<-mapply(value_img_LR,x1,x2)
#value of center pixel
center_value<-mapply(value_img_LR,center_data1$samp_row,center_data1$samp_col)
#subtract the value of center from the value of neighbor 8 pixels
value_LR<-neighbor_value-center_value
return(value_LR)
}
###extract value from high resolution dataset
###4 subpixels
extract_value_HR<-function(image_index){
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", image_index), ".jpg"))
Subpixel_list<-mapply(extract_four,data_index$samp_row, data_index$samp_col)
df_Subpixel <- data.frame(do.call(rbind,Subpixel_list))
center_data2<-expandRows(data_index, "freq2")
addblack_img<-addblack(imgHR)
y1<-df_Subpixel$X1
y2<-df_Subpixel$X2
subpixel_value<-mapply(value_img_LR,y1,y2)
###value of center pixel
center_value<-mapply(value_img_LR,center_data2$samp_row,center_data2$samp_col)
#subtract the value of center from the value of neighbor 8 pixels
value_HR<-subpixel_value-center_value
return(value_HR)
}
extract_value<-function(index){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", index), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", index), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
LR<-extract_value_LR(index)
addblack_img<-addblack(imgHR)
HR<-extract_value_HR(index)
return(list(data_index,LR,HR))
}
extract_value(1)
LR<-c()
for (i in 1:2){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
AR<-c(extract_value_LR(i))
LR<-rbind(LR,AR)
#addblack_img<-addblack(imgHR)
#HR<-extract_value_HR(i)
}
library(splitstackshape)
train_dir <- "/Users/sherrybaby/Documents/Github/Fall2018-Proj3-Sec2-grp6/data/train_set/" # This will be modified for different data sets.
LR_dir <- paste(train_dir, "LR/", sep="")
HR_dir <- paste(train_dir, "HR/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
set.seed(2018)
#setwd("/Users/sherrybaby/Documents/Github/Fall2018-Proj3-Sec2-grp6")
#addblack function
##add black around the original image
##input image
##output image with black around
addblack <- function(img) {
c1mat <- imageData(img)[, , 1]
c2mat <- imageData(img)[, , 2]
c3mat <- imageData(img)[, , 3]
c1matblack <- cbind(0, rbind(0, c1mat, 0), 0)
c2matblack <- cbind(0, rbind(0, c2mat, 0), 0)
c3matblack <- cbind(0, rbind(0, c3mat, 0), 0)
imgblack <- abind(c1matblack, c2matblack, c3matblack, along = 3)
return(imgblack)
}
#addblack(imgLR)
#addblack(imgHR)
###sample function
##input image
##output the index of image
sample_point<-function(imgLR,npoints=1000){
samp_row <- sample(1:nrow(imgLR), n_points, replace = TRUE)
samp_col <- sample(1:ncol(imgLR), n_points, replace=TRUE)
index<-data.frame(samp_row,samp_col)
index$freq1<-8
index$freq2<-4
return(index)
}
#sample_point(imgLR)
#sample_point(imgHR)
extract_eight<-function(samp_row,samp_col){
point1<-c(samp_row - 1, samp_col- 1)
point2<-c(samp_row - 1, samp_col)
point3<-c(samp_row -1, samp_col + 1)
point4<-c(samp_row, samp_col - 1)
point5<-c(samp_row, samp_col + 1)
point6<-c(samp_row+ 1, samp_col - 1)
point7<-c(samp_row + 1, samp_col)
point8<- c(samp_row + 1, samp_col+ 1)
return(list(rbind(point1,point2,point3,point4,point5,point6,point7,point8)))
}
###extract value by index function
value_img_LR<-function(row,col){
value<-c()
value<- addblack_img[c(row)+1,c(col)+1,]
return(value)
}
###extract value from low resolution dataset
extract_value_LR<-function(image_index){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", image_index), ".jpg"))
###8 pixels
data_index<-sample_point(imgLR)
neighbor_list<-mapply(extract_eight,data_index$samp_row, data_index$samp_col)
df_neighbor <- data.frame(do.call(rbind,neighbor_list))
center_data1<-expandRows(data_index, "freq1")
#add black around the LR image
addblack_img<-addblack(imgLR)
#value of neighbor 8 pixels
x1<-df_neighbor$X1
x2<-df_neighbor$X2
neighbor_value<-mapply(value_img_LR,x1,x2)
#value of center pixel
center_value<-mapply(value_img_LR,center_data1$samp_row,center_data1$samp_col)
#subtract the value of center from the value of neighbor 8 pixels
value_LR<-neighbor_value-center_value
return(value_LR)
}
###extract value from high resolution dataset function
###4 subpixels
extract_value_HR<-function(image_index){
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", image_index), ".jpg"))
Subpixel_list<-mapply(extract_four,data_index$samp_row, data_index$samp_col)
df_Subpixel <- data.frame(do.call(rbind,Subpixel_list))
center_data2<-expandRows(data_index, "freq2")
addblack_img<-addblack(imgHR)
y1<-df_Subpixel$X1
y2<-df_Subpixel$X2
subpixel_value<-mapply(value_img_LR,y1,y2)
###value of center pixel
center_value<-mapply(value_img_LR,center_data2$samp_row,center_data2$samp_col)
#subtract the value of center from the value of neighbor 8 pixels
value_HR<-subpixel_value-center_value
return(value_HR)
}
LR<-c()
for (i in 1:2){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
AR<-c(extract_value_LR(i))
LR<-rbind(LR,AR)
#addblack_img<-addblack(imgHR)
#HR<-extract_value_HR(i)
}
LR
LR<-c()
for (i in 1:2){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
AR<-c(extract_value_LR(i))
AR<-t(AR)
LR<-rbind(LR,AR)
#addblack_img<-addblack(imgHR)
#HR<-extract_value_HR(i)
}
LR
LR<-c()
for (i in 1:1){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
AR<-c(extract_value_LR(i))
AR<-t(AR)
LR<-rbind(LR,AR)
#addblack_img<-addblack(imgHR)
#HR<-extract_value_HR(i)
}
AR
dim(AR)
LR<-c()
for (i in 1:1){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
AR<-c(extract_value_LR(i))
AR<-t(AR)
#LR<-rbind(LR,AR)
#addblack_img<-addblack(imgHR)
#HR<-extract_value_HR(i)
}
AR
LR<-c()
for (i in 1:1){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
AR<-extract_value_LR(i)
AR<-t(AR)
#LR<-rbind(LR,AR)
#addblack_img<-addblack(imgHR)
#HR<-extract_value_HR(i)
}
AR
LR<-c()
for (i in 1:1){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
AR<-extract_value_LR(i)
AR<-t(AR)
LR<-rbind(LR,AR)
#addblack_img<-addblack(imgHR)
#HR<-extract_value_HR(i)
}
LR<-c()
for (i in 1:2){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
AR<-extract_value_LR(i)
AR<-t(AR)
LR<-rbind(LR,AR)
#addblack_img<-addblack(imgHR)
#HR<-extract_value_HR(i)
}
LR
LR<-c()
for (i in 1:2){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
AR<-extract_value_LR(i)
#AR<-t(AR)
#LR<-rbind(LR,AR)
addblack_img<-addblack(imgHR)
HR<-extract_value_HR(i)
}
HR
HR[1,]
dF_LR<-c()
dF_HR<-c()
for (i in 1:2){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
LR<-extract_value_LR(i)
LR<-t(LR)
df_LR<-rbind(LR,df_LR)
addblack_img<-addblack(imgHR)
HR<-extract_value_HR(i)
HR<-t(HR)
df_HR<-rbind(HR,df_HR)
}
df_LR<-c()
df_HR<-c()
for (i in 1:2){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
LR<-extract_value_LR(i)
LR<-t(LR)
df_LR<-rbind(LR,df_LR)
addblack_img<-addblack(imgHR)
HR<-extract_value_HR(i)
HR<-t(HR)
df_HR<-rbind(HR,df_HR)
}
df_LR
df_HR
df_LR<-c()
df_HR<-c()
for (i in 1:10){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
LR<-extract_value_LR(i)
LR<-t(LR)
df_LR<-rbind(LR,df_LR)
addblack_img<-addblack(imgHR)
HR<-extract_value_HR(i)
HR<-t(HR)
df_HR<-rbind(HR,df_HR)
}
df_LR<-c()
df_HR<-c()
for (i in 1:100){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
LR<-extract_value_LR(i)
LR<-t(LR)
df_LR<-rbind(LR,df_LR)
addblack_img<-addblack(imgHR)
HR<-extract_value_HR(i)
HR<-t(HR)
df_HR<-rbind(HR,df_HR)
}
df_LR<-c()
df_HR<-c()
for (i in 1:1500){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
LR<-extract_value_LR(i)
LR<-t(LR)
df_LR<-rbind(LR,df_LR)
addblack_img<-addblack(imgHR)
HR<-extract_value_HR(i)
HR<-t(HR)
df_HR<-rbind(HR,df_HR)
}
LR
df_LR
extract_value<-function(index){
imgLR <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", index), ".jpg"))
imgHR <- readImage(paste0(HR_dir,  "img_", sprintf("%04d", index), ".jpg"))
addblack_img<-addblack(imgLR)
data_index<-sample_point(imgLR)
LR<-extract_value_LR(index)
addblack_img<-addblack(imgHR)
HR<-extract_value_HR(index)
return(list(data_index,LR,HR))
}
extract_value(1)
extract_value(2)
extract_value(3)
mapply(extract_value,1:10)
mapply(extract_value,1:10)[1,1]
mapply(extract_value,1:1500)
